/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRewardChain,
  IRewardChainInterface,
} from "../../../contracts/StakeRelayer.sol/IRewardChain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "stakeChainSnapshot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "currentStakeChainSnapshot",
        type: "bytes32",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRewardChain__factory {
  static readonly abi = _abi;
  static createInterface(): IRewardChainInterface {
    return new Interface(_abi) as IRewardChainInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRewardChain {
    return new Contract(address, _abi, runner) as unknown as IRewardChain;
  }
}
